# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  accessToken: String
  fieldError: FieldError
  user: User
}

"""field to fetch spends"""
enum By {
  """fetch by amount"""
  AMOUNT

  """fetch by date"""
  DATE
}

type Category {
  id: Float!
  name: String!
  spends: [Spend!]
}

type FieldError {
  field: String!
  message: String!
}

input LoginInput {
  password: String!
  usernameOrEmail: String!
}

type Mutation {
  createSpend(spendInput: SpendInput!): Spend!
  login(loginInput: LoginInput!): AuthResponse!
  logout: Boolean!
  register(registerInput: RegisterInput!): AuthResponse!
  removeSpend(spendId: Int!): Boolean!
  updateSpend(spendId: Int!, spendInput: SpendInput!): Spend!
}

"""order to fetch spends"""
enum Order {
  """by ascending order"""
  ASC

  """by descending order"""
  DESC
}

input OrderByRange {
  by: By!
  order: Order!
  range: TimeRange!
}

type Query {
  getAllCategories: [Category!]!
  getSpendsByRange(cursor: String, limit: Int!, orderByRange: OrderByRange!): [Spend!]!
  hello: String!
  me: User
}

input RegisterInput {
  confirmPassword: String!
  email: String!
  password: String!
  username: String!
}

type Spend {
  amount: Float!
  category: Category!
  date: String!
  description: String
  id: Float!
  name: String!
  user: User!
}

input SpendInput {
  amount: Float!
  categoryId: Int!
  date: String
  description: String
  name: String!
}

"""time range to fetch spends"""
enum TimeRange {
  """day interval"""
  DAY

  """month interval"""
  MONTH

  """week interval"""
  WEEK
}

type User {
  email: String!
  id: Float!
  spends: [Spend!]
  username: String!
}
